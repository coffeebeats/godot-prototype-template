name: "ðŸ¤– Export: Godot project"

on:
  workflow_call:
    inputs:
      ref:
        type: string
        description: "The branch or tag name to check out. If empty, uses either the triggering event's SHA or the HEAD commit of the default branch."
        required: false
      platform:
        type: string
        required: true
      arch:
        type: string
        required: true
      storefront:
        type: string
        required: true
      profile:
        type: string
        required: true
      publish-export-template:
        type: boolean
        required: false
        default: false
    outputs:
      name:
        description: "The name of the artifact containing the exported game."
        value: ${{ jobs.package.outputs.artifact-name }}

permissions:
  actions: write # Allows this workflow to delete its temporary cache(s).

defaults:
  run:
    shell: bash

jobs:
  config:
    runs-on: ubuntu-latest
    timeout-minutes: 2

    outputs:
      presets: ${{ steps.set-presets.outputs.value }}
      godot-version: "${{ steps.version.outputs.semantic }}"

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
        with:
          ref: ${{ inputs.ref }}

      - uses: coffeebeats/godot-infra/.github/actions/parse-godot-version@v2
        id: version
        with:
          gdenv-pin-path: .godot-version

      - name: Evaluate presets
        id: set-presets
        run: |-
          PRESETS=($(grep '^name=' export_presets.cfg | sed 's/name=//' | sed 's/"//g' | grep "${{ inputs.arch }}-${{ inputs.platform }}-${{ inputs.storefront }}"))
          echo value=$(jq -c -n '$ARGS.positional' --args "${PRESETS[@]}") >> $GITHUB_OUTPUT

  compile:
    needs: ["config"]

    runs-on: ubuntu-latest
    timeout-minutes: 75

    outputs:
      key: ${{ steps.cache.outputs.key }}
      cache-path: ${{ steps.cache.outputs.path }}
      export-template-filename: ${{ steps.compile.outputs.export-template-filename }}
      extra-bundled-files: ${{ steps.compile.outputs.extra-bundled-files }}

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
        with:
          ref: ${{ inputs.ref }}

      - uses: coffeebeats/godot-infra/compile-godot-export-template@v2
        id: compile
        with:
          publish: ${{ inputs.publish-export-template }}

          godot-src-rev: ${{ needs.config.outputs.godot-version }}

          platform: ${{ inputs.platform }}
          arch: ${{ inputs.arch }}

          custompy-path: ./custom.py
          icon-path: "" # FIXME: Add path to icon.
          profile: ${{ inputs.profile }}
          use-double-precision: false

      # -------------------- Save export template artifact ------------------- #

      # NOTE: Rather than pass the export template between jobs as an artifact,
      # use the 'actions/cache' action, which is faster for small files.

      - name: Move the export template to the cache directory
        id: cache
        run: |-
          TARGET="${{ runner.temp }}/build"

          echo "Moving compiled export template artifacts to inter-job cache."
          echo "Source directory: ${{ steps.compile.outputs.path-artifact-dir }}"
          echo "Destination file: $TARGET"

          sudo mv ${{ steps.compile.outputs.path-artifact-dir }} ${{ runner.temp }}/build

          tree -lha --dirsfirst ${{ runner.temp }}/build

          echo path="$TARGET" >> $GITHUB_OUTPUT
          echo key='export-project-compile-${{ github.run_id }}-${{ inputs.platform }}-${{ inputs.arch }}-${{ inputs.storefront }}-${{ inputs.profile }}' >> $GITHUB_OUTPUT

      - name: Cache the export template to pass between jobs
        uses: actions/cache/save@d4323d4df104b026a6aa633fdb11d772146be0bf
        with:
          key: ${{ steps.cache.outputs.key }}
          path: ${{ steps.cache.outputs.path }}

  export:
    needs: ["config", "compile"]

    runs-on: ubuntu-latest
    timeout-minutes: 15

    strategy:
      fail-fast: true

      matrix:
        preset: ${{ fromJson(needs.config.outputs.presets) }}

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
        with:
          ref: ${{ inputs.ref }}
          submodules: true

      - uses: actions/cache/restore@d4323d4df104b026a6aa633fdb11d772146be0bf
        with:
          key: ${{ needs.compile.outputs.key }}
          path: ${{ needs.compile.outputs.cache-path }}
          fail-on-cache-miss: true

      - name: Delete 'compile' job cache
        env:
          GH_TOKEN: ${{ github.token }} # Required in order to use the 'gh' CLI.
        run: gh cache delete "${{ needs.compile.outputs.key }}"

      - name: Inspect compilation artifacts
        run: tree -lha --dirsfirst ${{ needs.compile.outputs.cache-path }}

      # ----------------------- Export required presets ---------------------- #

      # NOTE: The 'compile' job outputs bundle filepaths relative to the cache
      # directory. This step updates those filepaths to be absolute.
      - name: Compute 'extra-bundled-files'
        id: bundle
        run: |
          {
            echo "files<<EOM"

            for pattern in ${{ needs.compile.outputs.extra-bundled-files }}; do
                echo "${{ needs.compile.outputs.cache-path }}/$pattern"
            done

            echo "EOM"
          } >> "$GITHUB_OUTPUT"

      # Main executable
      - uses: coffeebeats/godot-infra/export-godot-project-preset@v2
        with:
          publish: true
          artifact-name: "export-${{ matrix.preset }}"

          preset-name: "${{ matrix.preset }}"

          godot-editor-version: ${{ needs.config.outputs.godot-version }}
          export-template-path: "${{ needs.compile.outputs.cache-path }}/${{ needs.compile.outputs.export-template-filename }}"
          extra-bundled-files: ${{ steps.bundle.outputs.files }}

          profile: ${{ inputs.profile }}

  package:
    needs: ["config", "export"]

    outputs:
      artifact-name: ${{ env.ARTIFACT_NAME }}

    env:
      ARTIFACT_NAME: "game-${{ inputs.arch }}-${{ inputs.platform }}-${{ inputs.storefront }}-${{ inputs.profile }}"

    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Compute export preset artifact pattern
        id: export-preset-artifacts
        # NOTE: This needs to match the 'export' job's artifact names because
        # there's no easy way to reference the names exactly. If we don't do
        # this then this step can accidentally download artifacts from other
        # jobs with different inputs.
        run: echo "pattern=export-*-${{ inputs.arch }}-${{ inputs.platform }}-${{ inputs.storefront }}" >> "$GITHUB_OUTPUT"

      - name: Download export preset artifacts
        uses: actions/download-artifact@b14cf4c92620c250e1c074ab0a5800e37df86765
        with:
          path: ${{ runner.temp }}/presets

          pattern: ${{ steps.export-preset-artifacts.outputs.pattern }}
          merge-multiple: true

      # NOTE: These are intermediate artifacts which don't need to be published.
      - name: Delete export preset artifacts
        uses: geekyeggo/delete-artifact@f275313e70c08f6120db482d7a6b98377786765b
        with:
          name: ${{ steps.export-preset-artifacts.outputs.pattern }}

      - name: Inspect game artifacts
        run: tree -lha --dirsfirst ${{ runner.temp }}/presets

      - name: Assemble the final game artifact
        id: artifact
        run: |-
          # Set options to enable more extensive globbing.
          shopt -s extglob
          shopt -s globstar

          LABEL="${{ env.ARTIFACT_NAME }}"

          # NOTE: Create a permission-preserving archive for the game. This is
          # critical to ensuring MacOS-targeted application bundles work when
          # downloaded.

          cd ${{ runner.temp }}/presets

          ls -ls

          ARCHIVE_PATH="${{ runner.temp }}/${LABEL}.tar.gz"
          tar \
            --strip-components 1 \
            -czf $ARCHIVE_PATH \
            *

          echo "Packaged export game artifacts into archive: $ARCHIVE_PATH"
          ls -ls $ARCHIVE_PATH

          echo "label=$LABEL" >> $GITHUB_OUTPUT
          echo "path=$ARCHIVE_PATH" >> $GITHUB_OUTPUT

      - uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02
        with:
          name: ${{ steps.artifact.outputs.label }}
          path: ${{ steps.artifact.outputs.path }}
